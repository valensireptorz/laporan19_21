[{"C:\\frontend01\\src\\index.js":"1","C:\\frontend01\\src\\App.js":"2","C:\\frontend01\\src\\template\\Routing.js":"3","C:\\frontend01\\src\\pages\\Mahasiswa.js":"4","C:\\frontend01\\src\\pages\\Jurusan.js":"5"},{"size":466,"mtime":1697984934062,"results":"6","hashOfConfig":"7"},{"size":183,"mtime":1697984906131,"results":"8","hashOfConfig":"7"},{"size":1430,"mtime":1697533297968,"results":"9","hashOfConfig":"7"},{"size":5855,"mtime":1697985975884,"results":"10","hashOfConfig":"7"},{"size":250,"mtime":1697984878031,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"to0t4c",{"filePath":"15","messages":"16","suppressedMessages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\frontend01\\src\\index.js",[],[],"C:\\frontend01\\src\\App.js",[],[],"C:\\frontend01\\src\\template\\Routing.js",["28"],[],"C:\\frontend01\\src\\pages\\Mahasiswa.js",["29","30","31"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { Container, Row, Col, Table, Button, Modal } from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nfunction Mahasiswa() {\r\n  const [mhs, setMhs] = useState([]);\r\n  const [jrs, setJrsn] = useState([]);\r\n  const [show, setShow] = useState(false);\r\n  const [nama, setNama] = useState(\"\");\r\n  const [nrp, setNrp] = useState(\"\");\r\n  const [id_jurusan, setIdJurusan] = useState(\"\");\r\n  const [gambar, setGambar] = useState(null);\r\n  const [swa_foto, setSwaFoto] = useState(null);\r\n  const [validation, setValidation] = useState({});\r\n  const navigate = useNavigate();\r\n  const url = \"http://localhost:3000/static/\";\r\n\r\n  useEffect(() => {\r\n    fectData();\r\n  }, []);\r\n\r\n  const fectData = async () => {\r\n    try {\r\n      const response1 = await axios.get(\"http://localhost:3000/mahasiswa\");\r\n      const data1 = await response1.data.data;\r\n      setMhs(data1);\r\n\r\n      const response2 = await axios.get(\"http://localhost:3000/\");\r\n      const data2 = await response2.data.data;\r\n      setJrsn(data2);\r\n    } catch (error) {\r\n      console.error(\"Kesalahan: \", error);\r\n    }\r\n  };\r\n\r\n  const handleShow = () => setShow(true);\r\n\r\n  const handleClose = () => {\r\n    console.log(\"Modal is closing\");\r\n    setShow(false);\r\n  };\r\n\r\n  const handleNamaChange = (e) => {\r\n    setNama(e.target.value);\r\n  };\r\n\r\n  const handleNrpChange = (e) => {\r\n    setNrp(e.target.value);\r\n  };\r\n\r\n  const handleIdJurusanChange = (e) => {\r\n    setIdJurusan(e.target.value);\r\n  };\r\n\r\n  const handleGambarChange = (e) => {\r\n    const file = e.target.files[0];\r\n    setGambar(file);\r\n  };\r\n\r\n  const handleSwaFotoChange = (e) => {\r\n    const file = e.target.files[0];\r\n    setSwaFoto(file);\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const formData = new FormData();\r\n\r\n    formData.append(\"nama\", nama);\r\n    formData.append(\"nrp\", nrp);\r\n    formData.append(\"id_jurusan\", id_jurusan);\r\n    formData.append(\"gambar\", gambar);\r\n    formData.append(\"swa_foto\", swa_foto);\r\n\r\n    try {\r\n      await axios.post(\"http://localhost:3000/\", formData, {\r\n        headers: {\r\n          \"Content-Type\": \"multipart/form-data\",\r\n        },\r\n      });\r\n      navigate(\"/\");\r\n      fectData();\r\n    } catch (error) {\r\n      console.error(\"Kesalahan: \", error);\r\n      setValidation(error.response.data);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        <Col>\r\n          <h2>Data Mahasiswa</h2>\r\n          <Button variant=\"primary\" onClick={handleShow}>\r\n            Tambah\r\n          </Button>\r\n        </Col>\r\n        <table className=\"table\">\r\n          <thead>\r\n            <tr>\r\n              <th scope=\"col\">No</th>\r\n              <th scope=\"col\">Nama</th>\r\n              <th scope=\"col\">Jurusan</th>\r\n              <th scope=\"col\">gambar</th>\r\n              <th scope=\"col\">swa_foto</th>\r\n            </tr>\r\n          </thead>\r\n\r\n          <tbody>\r\n            {mhs.map((mh, index) => (\r\n              <tr>\r\n                <td>{index + 1}</td>\r\n                <td>{mh.nama}</td>\r\n                <td>{mh.jurusan}</td>\r\n                <td>\r\n                  <img src={url + mh.gambar} height=\"100\" />\r\n                </td>\r\n                <td>\r\n                  <img src={url + mh.swa_foto} height=\"100\" />\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </Row>\r\n      <Row>\r\n        <Table striped bordered hover>\r\n          {/* Tabel Mahasiswa */}\r\n        </Table>\r\n      </Row>\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Tambah Data</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <form onSubmit={handleSubmit}>\r\n            <div className=\"mb-3\">\r\n              <label className=\"form-label\">Nama:</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                value={nama}\r\n                onChange={handleNamaChange}\r\n              />\r\n            </div>\r\n            <div className=\"mb-3\">\r\n              <label className=\"form-label\">NRP:</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                value={nrp}\r\n                onChange={handleNrpChange}\r\n              />\r\n            </div>\r\n            <div className=\"mb-3\">\r\n              <label className=\"form-label\">Jurusan:</label>\r\n              <select\r\n                className=\"form-select\"\r\n                value={id_jurusan}\r\n                onChange={handleIdJurusanChange}\r\n              >\r\n                {jrs.map((jr) => (\r\n                  <option key={jr.id_j} value={jr.id_j}>\r\n                    {jr.nama_jurusan}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n            <div className=\"mb-3\">\r\n              <label className=\"form-label\">Gambar:</label>\r\n              <input\r\n                type=\"file\"\r\n                className=\"form-control\"\r\n                accept=\"image/*\"\r\n                onChange={handleGambarChange}\r\n              />\r\n            </div>\r\n            <div className=\"mb-3\">\r\n              <label className=\"form-label\">Swa Foto:</label>\r\n              <input\r\n                type=\"file\"\r\n                className=\"form-control\"\r\n                accept=\"image/*\"\r\n                onChange={handleSwaFotoChange}\r\n              />\r\n            </div>\r\n            <button\r\n              onClick={handleClose}\r\n              type=\"submit\"\r\n              className=\"btn btn-primary\"\r\n            >\r\n              Kirim\r\n            </button>\r\n          </form>\r\n        </Modal.Body>\r\n      </Modal>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Mahasiswa;","C:\\frontend01\\src\\pages\\Jurusan.js",[],[],{"ruleId":"32","severity":1,"message":"33","line":12,"column":13,"nodeType":"34","endLine":12,"endColumn":50},{"ruleId":"35","severity":1,"message":"36","line":16,"column":10,"nodeType":"37","messageId":"38","endLine":16,"endColumn":20},{"ruleId":"39","severity":1,"message":"40","line":118,"column":19,"nodeType":"34","endLine":118,"endColumn":61},{"ruleId":"39","severity":1,"message":"40","line":121,"column":19,"nodeType":"34","endLine":121,"endColumn":63},"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'validation' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images."]